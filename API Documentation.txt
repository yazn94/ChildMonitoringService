-------------------------------------

1. Generate Game
- Endpoint
    - GET /monitoring/advanced/generate/game
- Headers
    - Authorization: <token>
- Description
    - Generates a new game for the child.
- Response
{
    "subject": "string",
    "image": "string"
}

---------

2. Get Feedback
- Endpoint
    - POST /monitoring/advanced/get/feedback
- Description
    - Retrieves feedback for the provided drawing subject and screenshot.
- Headers
    - Authorization: <token>
- Request Body
{
    "screenshot": "string",
    "subject": "string"
}
- Response
{
    "feedback": "string"
}

---------

3. Finish Game
- Endpoint
    - POST /monitoring/advanced/finish/game
- Description
    - Finishes a game and provides encouraging feedback.
- Headers
    - Authorization: <token>
- Request Body
{
    "screenshot": "string",
    "subject": "string"
}
- Response
{
    "finalFeedback": "string"
}

---------

4. Add Parent Instruction
- Endpoint
    - POST /monitoring/add/parent/instruction
- Description
    - Adds an instruction from a parent. This API should be used from the parent's page.
- Headers
    - Authorization: <token>
- Request Body
{
    "email": "string", // email of the child
    "instruction": "string"
}

- Response
200 OK if successful.

---------

5. Add Doctor Instruction
- Endpoint
    - POST /monitoring/add/doctor/instruction
- Headers
    - Authorization: <token>
- Request Body
{
    "email": "string",
    "instruction": "string"
}
- Description
     - Adds an instruction from a doctor. (This API should be used from the doctor's page.)
- Response
200 OK if successful.

---------

6. Get Parent Instructions
- Endpoint
    - POST /monitoring/get/parent/instructions
- Headers
    - Authorization: <token>
- Request Body
{
    "email": "string"
}
- Description
    - Retrieves instructions provided by the parent.  (by parent or doctor)
- Response
[
    {
        "ID": "string",
        "email": "string",
        "instruction": "string"
    }
]

---------

7. Get Doctor Instructions
- Endpoint
    - POST /monitoring/get/doctor/instructions
- Headers
    - Authorization: <token>
- Request Body
{
    "email": "string"
}
- Description
    - Retrieves instructions provided by the doctor.  (by parent or doctor)
Response
json
Copy code
[
    {
        "ID": "string",
        "email": "string",
        "instruction": "string"
    }
]

---------

8. Increase Games Played
- Endpoint
    - POST /monitoring/increase/games/played
- Headers
    - Authorization: <token>
- Description
    - Increases the count of games played by the child.
- Response
    - 200 OK if successful.

---------

9. Update General Feedback
- Endpoint
    - POST /monitoring/update/general/feedback
- Headers
    - Authorization: <token>
- Request Body
{
    "feedback": "string"
}
- Description
    - Updates the general feedback in the gaming profile.
- Response
    - 200 OK if successful.

---------

10. Get General Feedback
- Endpoint
    - POST /monitoring/get/general/feedback
- Headers
    - Authorization: <token>
- Request Body
{
    "email": "string"
}
- Description
    - Retrieves general feedback from the gaming profile. (by parent or doctor)
- Response
{
    "feedback": "string"
}

---------


11. Get Total Games Played
- Endpoint
    - POST /monitoring/get/total/games/played
- Headers
    - Authorization: <token>
- Request Body
{
    "email": "string"
}
- Description
    - Retrieves the total number of games played by the child. (all users allowed)
Response
{
    "totalGamesPlayed": "int"
}

---------

12. Add Game Summary
- Endpoint
    - POST /monitoring/add/game/summary
- Headers
    - Authorization: <token>
- Request Body
{
    "email": "string",
    "gameSubject": "string",
    "gameSummary": "string"
}
- Description
    - Adds a summary of the game played by the child. (could be used by child users - however this behavior is embedded in /monitoring/advanced/finish/game)
- Response
200 OK if successful.

---------

13. Get Game Summaries
- Endpoint
    - POST /monitoring/get/game/summaries
- Headers
    - Authorization: <token>
- Request Body
{
    "email": "string"
}
- Description
    - Retrieves summaries of the games played by the child. (could be used by any user)
- Response
[
    {
        "gameSubject": "string",
        "gameSummary": "string"
    }
]

---------

14. Delete Parent Instruction
- Endpoint
    - POST /monitoring/delete/parent/instruction
- Headers
    - Authorization: <token>
- Request Body
{
    "id": "int"
}
- Description
    - Deletes an instruction added by a parent. (from parent page)
- Response
200 OK if successful.

---------

15. Delete Doctor Instruction
- Endpoint
    - POST /monitoring/delete/doctor/instruction
- Headers
    - Authorization: <token>
- Request Body
{
    "id": "int"
}
- Description
    - Deletes an instruction added by a doctor. (from doctor page)
- Response
200 OK if successful.

---------
